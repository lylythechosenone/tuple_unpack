use std::any::{Any, TypeId};

pub trait TupleUnpack {
    fn unpack_types(&self) -> Vec<TypeId>;
    fn unpack_data(&self) -> Vec<&dyn Any>;
}
impl<T0: 'static,> TupleUnpack for (T0,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,]
    }
}
impl<T0: 'static,T1: 'static,> TupleUnpack for (T0,T1,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,> TupleUnpack for (T0,T1,T2,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,> TupleUnpack for (T0,T1,T2,T3,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,T95: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),TypeId::of::<T95>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,&self.95,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,T95: 'static,T96: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,T96,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),TypeId::of::<T95>(),TypeId::of::<T96>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,&self.95,&self.96,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,T95: 'static,T96: 'static,T97: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,T96,T97,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),TypeId::of::<T95>(),TypeId::of::<T96>(),TypeId::of::<T97>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,&self.95,&self.96,&self.97,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,T95: 'static,T96: 'static,T97: 'static,T98: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,T96,T97,T98,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),TypeId::of::<T95>(),TypeId::of::<T96>(),TypeId::of::<T97>(),TypeId::of::<T98>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,&self.95,&self.96,&self.97,&self.98,]
    }
}
impl<T0: 'static,T1: 'static,T2: 'static,T3: 'static,T4: 'static,T5: 'static,T6: 'static,T7: 'static,T8: 'static,T9: 'static,T10: 'static,T11: 'static,T12: 'static,T13: 'static,T14: 'static,T15: 'static,T16: 'static,T17: 'static,T18: 'static,T19: 'static,T20: 'static,T21: 'static,T22: 'static,T23: 'static,T24: 'static,T25: 'static,T26: 'static,T27: 'static,T28: 'static,T29: 'static,T30: 'static,T31: 'static,T32: 'static,T33: 'static,T34: 'static,T35: 'static,T36: 'static,T37: 'static,T38: 'static,T39: 'static,T40: 'static,T41: 'static,T42: 'static,T43: 'static,T44: 'static,T45: 'static,T46: 'static,T47: 'static,T48: 'static,T49: 'static,T50: 'static,T51: 'static,T52: 'static,T53: 'static,T54: 'static,T55: 'static,T56: 'static,T57: 'static,T58: 'static,T59: 'static,T60: 'static,T61: 'static,T62: 'static,T63: 'static,T64: 'static,T65: 'static,T66: 'static,T67: 'static,T68: 'static,T69: 'static,T70: 'static,T71: 'static,T72: 'static,T73: 'static,T74: 'static,T75: 'static,T76: 'static,T77: 'static,T78: 'static,T79: 'static,T80: 'static,T81: 'static,T82: 'static,T83: 'static,T84: 'static,T85: 'static,T86: 'static,T87: 'static,T88: 'static,T89: 'static,T90: 'static,T91: 'static,T92: 'static,T93: 'static,T94: 'static,T95: 'static,T96: 'static,T97: 'static,T98: 'static,T99: 'static,> TupleUnpack for (T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50,T51,T52,T53,T54,T55,T56,T57,T58,T59,T60,T61,T62,T63,T64,T65,T66,T67,T68,T69,T70,T71,T72,T73,T74,T75,T76,T77,T78,T79,T80,T81,T82,T83,T84,T85,T86,T87,T88,T89,T90,T91,T92,T93,T94,T95,T96,T97,T98,T99,) {
    fn unpack_types(&self) -> Vec<TypeId> {
        vec![TypeId::of::<T0>(),TypeId::of::<T1>(),TypeId::of::<T2>(),TypeId::of::<T3>(),TypeId::of::<T4>(),TypeId::of::<T5>(),TypeId::of::<T6>(),TypeId::of::<T7>(),TypeId::of::<T8>(),TypeId::of::<T9>(),TypeId::of::<T10>(),TypeId::of::<T11>(),TypeId::of::<T12>(),TypeId::of::<T13>(),TypeId::of::<T14>(),TypeId::of::<T15>(),TypeId::of::<T16>(),TypeId::of::<T17>(),TypeId::of::<T18>(),TypeId::of::<T19>(),TypeId::of::<T20>(),TypeId::of::<T21>(),TypeId::of::<T22>(),TypeId::of::<T23>(),TypeId::of::<T24>(),TypeId::of::<T25>(),TypeId::of::<T26>(),TypeId::of::<T27>(),TypeId::of::<T28>(),TypeId::of::<T29>(),TypeId::of::<T30>(),TypeId::of::<T31>(),TypeId::of::<T32>(),TypeId::of::<T33>(),TypeId::of::<T34>(),TypeId::of::<T35>(),TypeId::of::<T36>(),TypeId::of::<T37>(),TypeId::of::<T38>(),TypeId::of::<T39>(),TypeId::of::<T40>(),TypeId::of::<T41>(),TypeId::of::<T42>(),TypeId::of::<T43>(),TypeId::of::<T44>(),TypeId::of::<T45>(),TypeId::of::<T46>(),TypeId::of::<T47>(),TypeId::of::<T48>(),TypeId::of::<T49>(),TypeId::of::<T50>(),TypeId::of::<T51>(),TypeId::of::<T52>(),TypeId::of::<T53>(),TypeId::of::<T54>(),TypeId::of::<T55>(),TypeId::of::<T56>(),TypeId::of::<T57>(),TypeId::of::<T58>(),TypeId::of::<T59>(),TypeId::of::<T60>(),TypeId::of::<T61>(),TypeId::of::<T62>(),TypeId::of::<T63>(),TypeId::of::<T64>(),TypeId::of::<T65>(),TypeId::of::<T66>(),TypeId::of::<T67>(),TypeId::of::<T68>(),TypeId::of::<T69>(),TypeId::of::<T70>(),TypeId::of::<T71>(),TypeId::of::<T72>(),TypeId::of::<T73>(),TypeId::of::<T74>(),TypeId::of::<T75>(),TypeId::of::<T76>(),TypeId::of::<T77>(),TypeId::of::<T78>(),TypeId::of::<T79>(),TypeId::of::<T80>(),TypeId::of::<T81>(),TypeId::of::<T82>(),TypeId::of::<T83>(),TypeId::of::<T84>(),TypeId::of::<T85>(),TypeId::of::<T86>(),TypeId::of::<T87>(),TypeId::of::<T88>(),TypeId::of::<T89>(),TypeId::of::<T90>(),TypeId::of::<T91>(),TypeId::of::<T92>(),TypeId::of::<T93>(),TypeId::of::<T94>(),TypeId::of::<T95>(),TypeId::of::<T96>(),TypeId::of::<T97>(),TypeId::of::<T98>(),TypeId::of::<T99>(),]
    }
    fn unpack_data(&self) -> Vec<&dyn Any> {
        vec![&self.0,&self.1,&self.2,&self.3,&self.4,&self.5,&self.6,&self.7,&self.8,&self.9,&self.10,&self.11,&self.12,&self.13,&self.14,&self.15,&self.16,&self.17,&self.18,&self.19,&self.20,&self.21,&self.22,&self.23,&self.24,&self.25,&self.26,&self.27,&self.28,&self.29,&self.30,&self.31,&self.32,&self.33,&self.34,&self.35,&self.36,&self.37,&self.38,&self.39,&self.40,&self.41,&self.42,&self.43,&self.44,&self.45,&self.46,&self.47,&self.48,&self.49,&self.50,&self.51,&self.52,&self.53,&self.54,&self.55,&self.56,&self.57,&self.58,&self.59,&self.60,&self.61,&self.62,&self.63,&self.64,&self.65,&self.66,&self.67,&self.68,&self.69,&self.70,&self.71,&self.72,&self.73,&self.74,&self.75,&self.76,&self.77,&self.78,&self.79,&self.80,&self.81,&self.82,&self.83,&self.84,&self.85,&self.86,&self.87,&self.88,&self.89,&self.90,&self.91,&self.92,&self.93,&self.94,&self.95,&self.96,&self.97,&self.98,&self.99,]
    }
}

